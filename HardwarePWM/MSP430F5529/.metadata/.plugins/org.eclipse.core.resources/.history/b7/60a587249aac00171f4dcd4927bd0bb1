#include <msp430.h>

int HardwarePWM(void)
{
  WDTCTL = WDTPW + WDTHOLD;                 // Stop WDT

  P1IE   = 0x02;                            // P1.3 interrupt enabled, interrupt is enabled here, as well as interrupt clear
  P1IES |= 0x02;
  P1IFG &= ~BIT1;
  P1REN |= BIT1;

  P1DIR |= BIT0 + BIT1;                            //Set pin 1.2 to the output direction.
  P1SEL |= BIT0 + BIT1;                            //Select pin 1.0 as our PWM output.
  TA0CCR0 = 1000;                            //Set the period in the Timer A0 Capture/Compare 0 register to 1000 us.
  TA0CCTL1 = OUTMOD_7;
  TA0CCR1 = 500;                            //The period in microseconds that the power is ON. It's half the time, which translates to a 50% duty cycle.
  TA0CTL = TASSEL_1 + MC_1;                            //TASSEL_2 selects SMCLK as the clock source, and MC_1 tells it to count up to the value in TA0CCR0.

   __bis_SR_register(LPM4_bits + GIE);           //Switch to low power mode 0.                // SMCLK, up mode
}

#pragma vector=PORT1_VECTOR                    //This is what happens when you enter the interrupt
__interrupt void Port_1(void)
{
        unsigned int i;

          if (TA0CCR1 == 1000){
            TA0CCR1 = 0;
          }
          else{
            TA0CCR1 = TA0CCR1 + 100;
          }
       for(i=0;i<1000;i++);                //Delay
       P1IFG &= ~BIT1;                      // P1.3 IFG cleared
}





